services:
    db:
        image: postgres:17
        ports:
            - 5432:5432
        volumes:
            - postgres-data:/var/lib/postgresql/data/
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
            interval: 10s
            timeout: 10s
            retries: 10   
            start_period: 30s   
        env_file:
            - .env.test   
    redis:
        image: redis:alpine
        container_name: redis-container
        expose:
            - 6379
        ports:
            - 6379:6379
        restart: unless-stopped
        volumes:
            - redis_data:/data
    django:
        build:
            context: .
            dockerfile: notaminfo.Dockerfile  
        image: notaminfo
        command: sh -c "uv run manage.py makemigrations && uv run manage.py migrate && uv run manage.py runserver 0.0.0.0:8000"
        # command: sleep infinity
        volumes:
            - /tmp/app/mysqld:/run/mysqld
        ports:
            - 8000:8000
        depends_on:
            - db
            - redis
        environment:
            CELERY_BROKER_URL: redis://redis:6379/1
        env_file:
            - .env.test

        deploy:
            mode: global
            replicas: 3
            restart_policy:
                condition: on-failure
                delay: 15s
                max_attempts: 5
            rollback_config:
                parallelism: 1
                order: start-first
                failure_action: continue 

    celery:
        image: notaminfo
        container_name: celery-container
        command: uv run celery -A config worker --loglevel=info
        depends_on:
        - django
        - redis
        env_file:
            - .env.test
    beat:
        image: notaminfo
        container_name: beat-container
        command: uv run celery -A config beat --loglevel=info
        depends_on:
        - django
        - redis
        - celery
        env_file:
            - .env.test

    flower:
        image: notaminfo
        container_name: flower-container
        command: uv run celery -A config flower --port=5555
        ports: 
            - 5555:5555
        depends_on:
        - django
        - redis
        - celery
        env_file:
            - .env.test


volumes:
  postgres-data:
  redis_data: